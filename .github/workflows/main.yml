name: .NET Workflow

on:
  push:
    branches:
      - main  # or the name of the branch you want to deploy from
  pull_request:
    branches:
      - main  # or the name of the branch you want to deploy from

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.403'  # use the version you are targeting

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Run tests
      run: dotnet test --configuration Release

  ssh-into-ec2:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: SSH into EC2
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # SSH key secret
        EC2_HOST: 18.209.173.1  # Replace with your EC2 instance's IP
        EC2_USER: ubuntu  # Your EC2 username
      run: |
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "echo 'Connected successfully'"

  change-directory:
    runs-on: ubuntu-latest
    needs: ssh-into-ec2
    steps:
    - name: Change directory to project folder
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # SSH key secret
        EC2_HOST: 18.209.173.1  # Replace with your EC2 instance's IP
        EC2_USER: ubuntu  # Your EC2 username
      run: |
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "cd /var/www/html/Task_3_github_Actions && pwd"

  git-pull:
    runs-on: ubuntu-latest
    needs: change-directory
    steps:
    - name: Git pull latest changes
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # SSH key secret
        EC2_HOST: 18.209.173.1  # Replace with your EC2 instance's IP
        EC2_USER: ubuntu  # Your EC2 username
      run: |
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST \
          "cd /var/www/html/Task_3_github_Actions && \
           git reset --hard HEAD && \
           git pull origin main"

  remove-publish-folder:
    runs-on: ubuntu-latest
    needs: git-pull
    steps:
    - name: Remove existing publish folder
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # SSH key secret
        EC2_HOST: 18.209.173.1  # Replace with your EC2 instance's IP
        EC2_USER: ubuntu  # Your EC2 username
      run: |
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "cd /var/www/html/Task_3_github_Actions && rm -rf publish"

  dotnet-publish:
    runs-on: ubuntu-latest
    needs: remove-publish-folder
    steps:
    - name: Publish the .NET project
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # SSH key secret
        EC2_HOST: 18.209.173.1  # Replace with your EC2 instance's IP
        EC2_USER: ubuntu  # Your EC2 username
      run: |
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "cd /var/www/html/Task_3_github_Actions && dotnet publish CMS/CMS.csproj --configuration Release --output publish"

  restart-application:
    runs-on: ubuntu-latest
    needs: dotnet-publish
    steps:
    - name: Restart the application
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # SSH key secret
        EC2_HOST: 18.209.173.1  # Replace with your EC2 instance's IP
        EC2_USER: ubuntu  # Your EC2 username
      run: |
        echo "$EC2_SSH_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "cd /var/www/html/Task_3_github_Actions/publish && dotnet CMS.dll"
